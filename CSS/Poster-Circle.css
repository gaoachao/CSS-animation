

      body {
        font-family: 'Lucida Grande', Verdana, Arial;
        font-size: 12px;
      }

      #stage {
        margin: 150px auto;
        width: 600px;
        height: 400px;
        /*background-color: #bfa; */
        /*
        
        Setting the perspective of the contents of the stage
        but not the stage itself
        
        */
        perspective: 800;
      }

      #rotate {
        margin: 0 auto;
        /*background-color: #835A99; */
        width: 600px;
        height: 400px;
        /* Ensure that we're in 3D space */
        transform-style: preserve-3d;
        /*
        Make the whole set of rows use the x-axis spin animation
        for a duration of 7 seconds, running infinitely and linearly
        */
        animation-name: x-spin;
        animation-duration: 7s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
      }

      .ring {
        margin: 0 auto;
        height: 110px;
        width: 600px;
        transform-style: preserve-3d;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
      }
      
      .ring > :nth-child(odd) {
        background-color: #995C7F;
      }

      .ring > :nth-child(even) {
        background-color: #835A99;
      }

      .poster {
        position: absolute;
        left: 250px;
        width: 100px;
        height: 100px;
        opacity: 0.7;
        color: rgba(0,0,0,0.9);
        border-radius: 10px;
      }
      
      .poster > p {
        font-family: 'Georgia', serif;
        font-size: 36px;
        font-weight: bold;
        text-align: center;
        margin-top: 28px;
      }

      /*
      Set up each row to have a different animation duration
      and alternating y-axis rotation directions.
      */
      #ring-1 {
        animation-name: y-spin;
        animation-duration: 5s;
      }

      #ring-2 {
        animation-name: back-y-spin;
        animation-duration: 4s;
      }

      #ring-3 {
        animation-name: y-spin;
        animation-duration: 3s;
      }

      /*

      Here we define each of the three individual animations that
      we will be using to have our 3D rotation effect. The first
      animation will perform a full rotation on the x-axis, we'll
      use that on the whole set of objects. The second and third
      animations will perform a full rotation on the y-axis in
      opposite directions, alternating directions between rows.
    
      Note that you currently have to specify an intermediate step
      for rotations even when you are using individual transformation
      constructs.

      */

      /*
        在设置动画前需要设置关键帧
      */
      @keyframes x-spin {
        0%    { transform: rotateX(0deg); }
        50%   { transform: rotateX(180deg); }
        100%  { transform: rotateX(360deg); }
      }

      @keyframes y-spin {
        0%    { transform: rotateY(0deg); }
        50%   { transform: rotateY(180deg); }
        100%  { transform: rotateY(360deg); }
      }

      @keyframes back-y-spin {
        0%    { transform: rotateY(360deg); }
        50%   { transform: rotateY(180deg); }
        100%  { transform: rotateY(0deg); }
      }
    


      /* animation-iteration-count 动画执行的次数
            1,2,3,4,5...infinite
         
         animation-direction 动画执行的方向
            normal    从 from 向 to 运行 每次都是这样
            reverse   从 to 向 from 运行 每次都是这样
            alternate 从from 向 to 运行 重复执行动画时反向
            alternate-reverse

         animation-play-state 动画执行的状态
            running 
            paused
        
         animation-fill-mode 动画的填充模式
            none 默认值 动画执行完毕元素回到原来位置
            forwards 动画执行完毕元素会停止在动画结束的位置
            backwards 动画延时等待时，元素就会处于开始位置
            both = forwards + backwards
        
        
         transform 用来设置元素的变形效果
          默认的情况下网页是不支持透视的（translateZ的值是多少不影响元素大小）
          需要使用视距 perspective(800px)  (设置视距后，其实元素的大小不变，只是近大远小）
            平移：
               translateX()
               translateY()
               translateZ()
                  在平移元素时，百分数是相对于自身宽度的。
            旋转：
               rotateX()
               rotateY()
               ratateZ()